<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--把Service的包下扫描到有注解的的所有类都放到IOC中进行管理-->
    <context:component-scan base-package="com.project.crowd.service"/>
    <!--把config的包下扫描到有注解的的所有类都放到IOC中进行管理-->
    <context:component-scan base-package="com.project.crowd.securityConfig"/>

    <!--配置事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--装配数据源（路径是另一个xml中）-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务切面-->
    <aop:config>
        <!--路径：任意修饰符和返回值，任意包名，任意包层次，任意ServiceImpl，任意方法(任意返回值)-->
        <!--避免SpringSecurity中UserDetailService加入事务控制，改为ServiceImpl,不再是接口-->
        <aop:pointcut id="txPointcut" expression="execution(* *..*ServiceImpl.*(..))"/>
        
        <!--将切入点表达式和事务通知关联-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--配置事务属性-->
        <tx:attributes>
            <!--查询方法：配置只读属性，让数据库知道这是一个查询操作，能够进行优化-->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>

            <!--增删改方法：配置事务传播行为，回滚异常-->
            <!-- 默认值：REQUIRED 表示：当前方法必须运行在事务中，如果没有事务，则开启事务，
            在自己的事务中运行。如果已经有了已开启的事务，则在当前事务中运行。
            有可能和其他方法共用同一个事务。 -->
            <!-- 建议值：REQUIRES_NEW 表示：当前方法必须运行在事务中，如果没有事务， 则开启事务，
            在自己的事务中运行。和 REQUIRED 的区别是就算现在已经有了已开启的事务，
            也一定要开启自己的事务，避免和其他方法共用同一个事务。 -->
            <!-- rollback-for 属性配置回滚的异常
                默认值：运行时异常
                建议值：编译时异常+运行时异常 -->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="batch*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <!--配置security的BCryptPasswordEncoder加密功能-->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans>